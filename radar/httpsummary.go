// File generated from our OpenAPI spec by Stainless.

package radar

import (
	"context"
	"net/http"
	"net/url"
	"time"

	"github.com/cloudflare/cloudflare-go/v2/internal/apijson"
	"github.com/cloudflare/cloudflare-go/v2/internal/apiquery"
	"github.com/cloudflare/cloudflare-go/v2/internal/param"
	"github.com/cloudflare/cloudflare-go/v2/internal/requestconfig"
	"github.com/cloudflare/cloudflare-go/v2/option"
)

// HTTPSummaryService contains methods and other services that help with
// interacting with the cloudflare API. Note, unlike clients, this service does not
// read variables from the environment automatically. You should not instantiate
// this service directly, and instead use the [NewHTTPSummaryService] method
// instead.
type HTTPSummaryService struct {
	Options []option.RequestOption
}

// NewHTTPSummaryService generates a new service that applies the given options to
// each request. These options are applied after the parent client's options (if
// there is one), and before any request-specific options.
func NewHTTPSummaryService(opts ...option.RequestOption) (r *HTTPSummaryService) {
	r = &HTTPSummaryService{}
	r.Options = opts
	return
}

// Percentage distribution of bot-generated traffic to genuine human traffic, as
// classified by Cloudflare. Visit
// https://developers.cloudflare.com/radar/concepts/bot-classes/ for more
// information.
func (r *HTTPSummaryService) BotClass(ctx context.Context, query HTTPSummaryBotClassParams, opts ...option.RequestOption) (res *HTTPSummaryBotClassResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryBotClassResponseEnvelope
	path := "radar/http/summary/bot_class"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

// Percentage of Internet traffic generated by mobile, desktop, and other types of
// devices, over a given time period.
func (r *HTTPSummaryService) DeviceType(ctx context.Context, query HTTPSummaryDeviceTypeParams, opts ...option.RequestOption) (res *HTTPSummaryDeviceTypeResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryDeviceTypeResponseEnvelope
	path := "radar/http/summary/device_type"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

// Percentage distribution of traffic per HTTP protocol over a given time period.
func (r *HTTPSummaryService) HTTPProtocol(ctx context.Context, query HTTPSummaryHTTPProtocolParams, opts ...option.RequestOption) (res *HTTPSummaryHTTPProtocolResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryHTTPProtocolResponseEnvelope
	path := "radar/http/summary/http_protocol"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

// Percentage distribution of traffic per HTTP protocol version over a given time
// period.
func (r *HTTPSummaryService) HTTPVersion(ctx context.Context, query HTTPSummaryHTTPVersionParams, opts ...option.RequestOption) (res *HTTPSummaryHTTPVersionResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryHTTPVersionResponseEnvelope
	path := "radar/http/summary/http_version"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

// Percentage distribution of Internet traffic based on IP protocol versions, such
// as IPv4 and IPv6, over a given time period.
func (r *HTTPSummaryService) IPVersion(ctx context.Context, query HTTPSummaryIPVersionParams, opts ...option.RequestOption) (res *HTTPSummaryIPVersionResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryIPVersionResponseEnvelope
	path := "radar/http/summary/ip_version"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

// Percentage distribution of Internet traffic generated by different operating
// systems like Windows, macOS, Android, iOS, and others, over a given time period.
func (r *HTTPSummaryService) OS(ctx context.Context, query HTTPSummaryOSParams, opts ...option.RequestOption) (res *HTTPSummaryOSResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryOSResponseEnvelope
	path := "radar/http/summary/os"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

// Percentage distribution of traffic per TLS protocol version, over a given time
// period.
func (r *HTTPSummaryService) TLSVersion(ctx context.Context, query HTTPSummaryTLSVersionParams, opts ...option.RequestOption) (res *HTTPSummaryTLSVersionResponse, err error) {
	opts = append(r.Options[:], opts...)
	var env HTTPSummaryTLSVersionResponseEnvelope
	path := "radar/http/summary/tls_version"
	err = requestconfig.ExecuteNewRequest(ctx, http.MethodGet, path, query, &env, opts...)
	if err != nil {
		return
	}
	res = &env.Result
	return
}

type HTTPSummaryBotClassResponse struct {
	Meta     HTTPSummaryBotClassResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryBotClassResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryBotClassResponseJSON     `json:"-"`
}

// httpSummaryBotClassResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryBotClassResponse]
type httpSummaryBotClassResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryBotClassResponseMeta struct {
	DateRange      []HTTPSummaryBotClassResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                        `json:"lastUpdated,required"`
	Normalization  string                                        `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryBotClassResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryBotClassResponseMetaJSON           `json:"-"`
}

// httpSummaryBotClassResponseMetaJSON contains the JSON metadata for the struct
// [HTTPSummaryBotClassResponseMeta]
type httpSummaryBotClassResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryBotClassResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                                    `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryBotClassResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryBotClassResponseMetaDateRangeJSON contains the JSON metadata for the
// struct [HTTPSummaryBotClassResponseMetaDateRange]
type httpSummaryBotClassResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryBotClassResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryBotClassResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                                     `json:"level"`
	JSON        httpSummaryBotClassResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryBotClassResponseMetaConfidenceInfoJSON contains the JSON metadata for
// the struct [HTTPSummaryBotClassResponseMetaConfidenceInfo]
type httpSummaryBotClassResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryBotClassResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                      `json:"dataSource,required"`
	Description     string                                                      `json:"description,required"`
	EventType       string                                                      `json:"eventType,required"`
	IsInstantaneous interface{}                                                 `json:"isInstantaneous,required"`
	EndTime         time.Time                                                   `json:"endTime" format:"date-time"`
	LinkedURL       string                                                      `json:"linkedUrl"`
	StartTime       time.Time                                                   `json:"startTime" format:"date-time"`
	JSON            httpSummaryBotClassResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryBotClassResponseMetaConfidenceInfoAnnotationJSON contains the JSON
// metadata for the struct
// [HTTPSummaryBotClassResponseMetaConfidenceInfoAnnotation]
type httpSummaryBotClassResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryBotClassResponseSummary0 struct {
	Bot   string                                  `json:"bot,required"`
	Human string                                  `json:"human,required"`
	JSON  httpSummaryBotClassResponseSummary0JSON `json:"-"`
}

// httpSummaryBotClassResponseSummary0JSON contains the JSON metadata for the
// struct [HTTPSummaryBotClassResponseSummary0]
type httpSummaryBotClassResponseSummary0JSON struct {
	Bot         apijson.Field
	Human       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeResponse struct {
	Meta     HTTPSummaryDeviceTypeResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryDeviceTypeResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryDeviceTypeResponseJSON     `json:"-"`
}

// httpSummaryDeviceTypeResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryDeviceTypeResponse]
type httpSummaryDeviceTypeResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeResponseMeta struct {
	DateRange      []HTTPSummaryDeviceTypeResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                          `json:"lastUpdated,required"`
	Normalization  string                                          `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryDeviceTypeResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryDeviceTypeResponseMetaJSON           `json:"-"`
}

// httpSummaryDeviceTypeResponseMetaJSON contains the JSON metadata for the struct
// [HTTPSummaryDeviceTypeResponseMeta]
type httpSummaryDeviceTypeResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                                      `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryDeviceTypeResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryDeviceTypeResponseMetaDateRangeJSON contains the JSON metadata for
// the struct [HTTPSummaryDeviceTypeResponseMetaDateRange]
type httpSummaryDeviceTypeResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryDeviceTypeResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                                       `json:"level"`
	JSON        httpSummaryDeviceTypeResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryDeviceTypeResponseMetaConfidenceInfoJSON contains the JSON metadata
// for the struct [HTTPSummaryDeviceTypeResponseMetaConfidenceInfo]
type httpSummaryDeviceTypeResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                        `json:"dataSource,required"`
	Description     string                                                        `json:"description,required"`
	EventType       string                                                        `json:"eventType,required"`
	IsInstantaneous interface{}                                                   `json:"isInstantaneous,required"`
	EndTime         time.Time                                                     `json:"endTime" format:"date-time"`
	LinkedURL       string                                                        `json:"linkedUrl"`
	StartTime       time.Time                                                     `json:"startTime" format:"date-time"`
	JSON            httpSummaryDeviceTypeResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryDeviceTypeResponseMetaConfidenceInfoAnnotationJSON contains the JSON
// metadata for the struct
// [HTTPSummaryDeviceTypeResponseMetaConfidenceInfoAnnotation]
type httpSummaryDeviceTypeResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeResponseSummary0 struct {
	Desktop string                                    `json:"desktop,required"`
	Mobile  string                                    `json:"mobile,required"`
	Other   string                                    `json:"other,required"`
	JSON    httpSummaryDeviceTypeResponseSummary0JSON `json:"-"`
}

// httpSummaryDeviceTypeResponseSummary0JSON contains the JSON metadata for the
// struct [HTTPSummaryDeviceTypeResponseSummary0]
type httpSummaryDeviceTypeResponseSummary0JSON struct {
	Desktop     apijson.Field
	Mobile      apijson.Field
	Other       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolResponse struct {
	Meta     HTTPSummaryHTTPProtocolResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryHTTPProtocolResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryHTTPProtocolResponseJSON     `json:"-"`
}

// httpSummaryHTTPProtocolResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryHTTPProtocolResponse]
type httpSummaryHTTPProtocolResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolResponseMeta struct {
	DateRange      []HTTPSummaryHTTPProtocolResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                            `json:"lastUpdated,required"`
	Normalization  string                                            `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryHTTPProtocolResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryHTTPProtocolResponseMetaJSON           `json:"-"`
}

// httpSummaryHTTPProtocolResponseMetaJSON contains the JSON metadata for the
// struct [HTTPSummaryHTTPProtocolResponseMeta]
type httpSummaryHTTPProtocolResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                                        `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryHTTPProtocolResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryHTTPProtocolResponseMetaDateRangeJSON contains the JSON metadata for
// the struct [HTTPSummaryHTTPProtocolResponseMetaDateRange]
type httpSummaryHTTPProtocolResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                                         `json:"level"`
	JSON        httpSummaryHTTPProtocolResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryHTTPProtocolResponseMetaConfidenceInfoJSON contains the JSON metadata
// for the struct [HTTPSummaryHTTPProtocolResponseMetaConfidenceInfo]
type httpSummaryHTTPProtocolResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                          `json:"dataSource,required"`
	Description     string                                                          `json:"description,required"`
	EventType       string                                                          `json:"eventType,required"`
	IsInstantaneous interface{}                                                     `json:"isInstantaneous,required"`
	EndTime         time.Time                                                       `json:"endTime" format:"date-time"`
	LinkedURL       string                                                          `json:"linkedUrl"`
	StartTime       time.Time                                                       `json:"startTime" format:"date-time"`
	JSON            httpSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotationJSON contains the
// JSON metadata for the struct
// [HTTPSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotation]
type httpSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolResponseSummary0 struct {
	HTTP  string                                      `json:"http,required"`
	HTTPS string                                      `json:"https,required"`
	JSON  httpSummaryHTTPProtocolResponseSummary0JSON `json:"-"`
}

// httpSummaryHTTPProtocolResponseSummary0JSON contains the JSON metadata for the
// struct [HTTPSummaryHTTPProtocolResponseSummary0]
type httpSummaryHTTPProtocolResponseSummary0JSON struct {
	HTTP        apijson.Field
	HTTPS       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionResponse struct {
	Meta     HTTPSummaryHTTPVersionResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryHTTPVersionResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryHTTPVersionResponseJSON     `json:"-"`
}

// httpSummaryHTTPVersionResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryHTTPVersionResponse]
type httpSummaryHTTPVersionResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionResponseMeta struct {
	DateRange      []HTTPSummaryHTTPVersionResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                           `json:"lastUpdated,required"`
	Normalization  string                                           `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryHTTPVersionResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryHTTPVersionResponseMetaJSON           `json:"-"`
}

// httpSummaryHTTPVersionResponseMetaJSON contains the JSON metadata for the struct
// [HTTPSummaryHTTPVersionResponseMeta]
type httpSummaryHTTPVersionResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                                       `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryHTTPVersionResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryHTTPVersionResponseMetaDateRangeJSON contains the JSON metadata for
// the struct [HTTPSummaryHTTPVersionResponseMetaDateRange]
type httpSummaryHTTPVersionResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryHTTPVersionResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                                        `json:"level"`
	JSON        httpSummaryHTTPVersionResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryHTTPVersionResponseMetaConfidenceInfoJSON contains the JSON metadata
// for the struct [HTTPSummaryHTTPVersionResponseMetaConfidenceInfo]
type httpSummaryHTTPVersionResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                         `json:"dataSource,required"`
	Description     string                                                         `json:"description,required"`
	EventType       string                                                         `json:"eventType,required"`
	IsInstantaneous interface{}                                                    `json:"isInstantaneous,required"`
	EndTime         time.Time                                                      `json:"endTime" format:"date-time"`
	LinkedURL       string                                                         `json:"linkedUrl"`
	StartTime       time.Time                                                      `json:"startTime" format:"date-time"`
	JSON            httpSummaryHTTPVersionResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryHTTPVersionResponseMetaConfidenceInfoAnnotationJSON contains the JSON
// metadata for the struct
// [HTTPSummaryHTTPVersionResponseMetaConfidenceInfoAnnotation]
type httpSummaryHTTPVersionResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionResponseSummary0 struct {
	HTTP1X string                                     `json:"HTTP/1.x,required"`
	HTTP2  string                                     `json:"HTTP/2,required"`
	HTTP3  string                                     `json:"HTTP/3,required"`
	JSON   httpSummaryHTTPVersionResponseSummary0JSON `json:"-"`
}

// httpSummaryHTTPVersionResponseSummary0JSON contains the JSON metadata for the
// struct [HTTPSummaryHTTPVersionResponseSummary0]
type httpSummaryHTTPVersionResponseSummary0JSON struct {
	HTTP1X      apijson.Field
	HTTP2       apijson.Field
	HTTP3       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionResponse struct {
	Meta     HTTPSummaryIPVersionResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryIPVersionResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryIPVersionResponseJSON     `json:"-"`
}

// httpSummaryIPVersionResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryIPVersionResponse]
type httpSummaryIPVersionResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionResponseMeta struct {
	DateRange      []HTTPSummaryIPVersionResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                         `json:"lastUpdated,required"`
	Normalization  string                                         `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryIPVersionResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryIPVersionResponseMetaJSON           `json:"-"`
}

// httpSummaryIPVersionResponseMetaJSON contains the JSON metadata for the struct
// [HTTPSummaryIPVersionResponseMeta]
type httpSummaryIPVersionResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                                     `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryIPVersionResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryIPVersionResponseMetaDateRangeJSON contains the JSON metadata for the
// struct [HTTPSummaryIPVersionResponseMetaDateRange]
type httpSummaryIPVersionResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryIPVersionResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                                      `json:"level"`
	JSON        httpSummaryIPVersionResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryIPVersionResponseMetaConfidenceInfoJSON contains the JSON metadata
// for the struct [HTTPSummaryIPVersionResponseMetaConfidenceInfo]
type httpSummaryIPVersionResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                       `json:"dataSource,required"`
	Description     string                                                       `json:"description,required"`
	EventType       string                                                       `json:"eventType,required"`
	IsInstantaneous interface{}                                                  `json:"isInstantaneous,required"`
	EndTime         time.Time                                                    `json:"endTime" format:"date-time"`
	LinkedURL       string                                                       `json:"linkedUrl"`
	StartTime       time.Time                                                    `json:"startTime" format:"date-time"`
	JSON            httpSummaryIPVersionResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryIPVersionResponseMetaConfidenceInfoAnnotationJSON contains the JSON
// metadata for the struct
// [HTTPSummaryIPVersionResponseMetaConfidenceInfoAnnotation]
type httpSummaryIPVersionResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionResponseSummary0 struct {
	IPv4 string                                   `json:"IPv4,required"`
	IPv6 string                                   `json:"IPv6,required"`
	JSON httpSummaryIPVersionResponseSummary0JSON `json:"-"`
}

// httpSummaryIPVersionResponseSummary0JSON contains the JSON metadata for the
// struct [HTTPSummaryIPVersionResponseSummary0]
type httpSummaryIPVersionResponseSummary0JSON struct {
	IPv4        apijson.Field
	IPv6        apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSResponse struct {
	Meta     HTTPSummaryOSResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryOSResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryOSResponseJSON     `json:"-"`
}

// httpSummaryOSResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryOSResponse]
type httpSummaryOSResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryOSResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSResponseMeta struct {
	DateRange      []HTTPSummaryOSResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                  `json:"lastUpdated,required"`
	Normalization  string                                  `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryOSResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryOSResponseMetaJSON           `json:"-"`
}

// httpSummaryOSResponseMetaJSON contains the JSON metadata for the struct
// [HTTPSummaryOSResponseMeta]
type httpSummaryOSResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryOSResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                              `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryOSResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryOSResponseMetaDateRangeJSON contains the JSON metadata for the struct
// [HTTPSummaryOSResponseMetaDateRange]
type httpSummaryOSResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryOSResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryOSResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                               `json:"level"`
	JSON        httpSummaryOSResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryOSResponseMetaConfidenceInfoJSON contains the JSON metadata for the
// struct [HTTPSummaryOSResponseMetaConfidenceInfo]
type httpSummaryOSResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryOSResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                `json:"dataSource,required"`
	Description     string                                                `json:"description,required"`
	EventType       string                                                `json:"eventType,required"`
	IsInstantaneous interface{}                                           `json:"isInstantaneous,required"`
	EndTime         time.Time                                             `json:"endTime" format:"date-time"`
	LinkedURL       string                                                `json:"linkedUrl"`
	StartTime       time.Time                                             `json:"startTime" format:"date-time"`
	JSON            httpSummaryOSResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryOSResponseMetaConfidenceInfoAnnotationJSON contains the JSON metadata
// for the struct [HTTPSummaryOSResponseMetaConfidenceInfoAnnotation]
type httpSummaryOSResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryOSResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSResponseSummary0 struct {
	Android string                            `json:"ANDROID,required"`
	Ios     string                            `json:"IOS,required"`
	JSON    httpSummaryOSResponseSummary0JSON `json:"-"`
}

// httpSummaryOSResponseSummary0JSON contains the JSON metadata for the struct
// [HTTPSummaryOSResponseSummary0]
type httpSummaryOSResponseSummary0JSON struct {
	Android     apijson.Field
	Ios         apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryOSResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionResponse struct {
	Meta     HTTPSummaryTLSVersionResponseMeta     `json:"meta,required"`
	Summary0 HTTPSummaryTLSVersionResponseSummary0 `json:"summary_0,required"`
	JSON     httpSummaryTLSVersionResponseJSON     `json:"-"`
}

// httpSummaryTLSVersionResponseJSON contains the JSON metadata for the struct
// [HTTPSummaryTLSVersionResponse]
type httpSummaryTLSVersionResponseJSON struct {
	Meta        apijson.Field
	Summary0    apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponse) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionResponseMeta struct {
	DateRange      []HTTPSummaryTLSVersionResponseMetaDateRange    `json:"dateRange,required"`
	LastUpdated    string                                          `json:"lastUpdated,required"`
	Normalization  string                                          `json:"normalization,required"`
	ConfidenceInfo HTTPSummaryTLSVersionResponseMetaConfidenceInfo `json:"confidenceInfo"`
	JSON           httpSummaryTLSVersionResponseMetaJSON           `json:"-"`
}

// httpSummaryTLSVersionResponseMetaJSON contains the JSON metadata for the struct
// [HTTPSummaryTLSVersionResponseMeta]
type httpSummaryTLSVersionResponseMetaJSON struct {
	DateRange      apijson.Field
	LastUpdated    apijson.Field
	Normalization  apijson.Field
	ConfidenceInfo apijson.Field
	raw            string
	ExtraFields    map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponseMeta) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseMetaJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionResponseMetaDateRange struct {
	// Adjusted end of date range.
	EndTime time.Time `json:"endTime,required" format:"date-time"`
	// Adjusted start of date range.
	StartTime time.Time                                      `json:"startTime,required" format:"date-time"`
	JSON      httpSummaryTLSVersionResponseMetaDateRangeJSON `json:"-"`
}

// httpSummaryTLSVersionResponseMetaDateRangeJSON contains the JSON metadata for
// the struct [HTTPSummaryTLSVersionResponseMetaDateRange]
type httpSummaryTLSVersionResponseMetaDateRangeJSON struct {
	EndTime     apijson.Field
	StartTime   apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponseMetaDateRange) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseMetaDateRangeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionResponseMetaConfidenceInfo struct {
	Annotations []HTTPSummaryTLSVersionResponseMetaConfidenceInfoAnnotation `json:"annotations"`
	Level       int64                                                       `json:"level"`
	JSON        httpSummaryTLSVersionResponseMetaConfidenceInfoJSON         `json:"-"`
}

// httpSummaryTLSVersionResponseMetaConfidenceInfoJSON contains the JSON metadata
// for the struct [HTTPSummaryTLSVersionResponseMetaConfidenceInfo]
type httpSummaryTLSVersionResponseMetaConfidenceInfoJSON struct {
	Annotations apijson.Field
	Level       apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponseMetaConfidenceInfo) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseMetaConfidenceInfoJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionResponseMetaConfidenceInfoAnnotation struct {
	DataSource      string                                                        `json:"dataSource,required"`
	Description     string                                                        `json:"description,required"`
	EventType       string                                                        `json:"eventType,required"`
	IsInstantaneous interface{}                                                   `json:"isInstantaneous,required"`
	EndTime         time.Time                                                     `json:"endTime" format:"date-time"`
	LinkedURL       string                                                        `json:"linkedUrl"`
	StartTime       time.Time                                                     `json:"startTime" format:"date-time"`
	JSON            httpSummaryTLSVersionResponseMetaConfidenceInfoAnnotationJSON `json:"-"`
}

// httpSummaryTLSVersionResponseMetaConfidenceInfoAnnotationJSON contains the JSON
// metadata for the struct
// [HTTPSummaryTLSVersionResponseMetaConfidenceInfoAnnotation]
type httpSummaryTLSVersionResponseMetaConfidenceInfoAnnotationJSON struct {
	DataSource      apijson.Field
	Description     apijson.Field
	EventType       apijson.Field
	IsInstantaneous apijson.Field
	EndTime         apijson.Field
	LinkedURL       apijson.Field
	StartTime       apijson.Field
	raw             string
	ExtraFields     map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponseMetaConfidenceInfoAnnotation) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseMetaConfidenceInfoAnnotationJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionResponseSummary0 struct {
	TLS1_0  string                                    `json:"TLS 1.0,required"`
	TLS1_1  string                                    `json:"TLS 1.1,required"`
	TLS1_2  string                                    `json:"TLS 1.2,required"`
	TLS1_3  string                                    `json:"TLS 1.3,required"`
	TLSQuic string                                    `json:"TLS QUIC,required"`
	JSON    httpSummaryTLSVersionResponseSummary0JSON `json:"-"`
}

// httpSummaryTLSVersionResponseSummary0JSON contains the JSON metadata for the
// struct [HTTPSummaryTLSVersionResponseSummary0]
type httpSummaryTLSVersionResponseSummary0JSON struct {
	TLS1_0      apijson.Field
	TLS1_1      apijson.Field
	TLS1_2      apijson.Field
	TLS1_3      apijson.Field
	TLSQuic     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponseSummary0) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseSummary0JSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryBotClassParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryBotClassParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Filter for device type.
	DeviceType param.Field[[]HTTPSummaryBotClassParamsDeviceType] `query:"deviceType"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryBotClassParamsFormat] `query:"format"`
	// Filter for http protocol.
	HTTPProtocol param.Field[[]HTTPSummaryBotClassParamsHTTPProtocol] `query:"httpProtocol"`
	// Filter for http version.
	HTTPVersion param.Field[[]HTTPSummaryBotClassParamsHTTPVersion] `query:"httpVersion"`
	// Filter for ip version.
	IPVersion param.Field[[]HTTPSummaryBotClassParamsIPVersion] `query:"ipVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for os name.
	OS param.Field[[]HTTPSummaryBotClassParamsOS] `query:"os"`
	// Filter for tls version.
	TLSVersion param.Field[[]HTTPSummaryBotClassParamsTLSVersion] `query:"tlsVersion"`
}

// URLQuery serializes [HTTPSummaryBotClassParams]'s query parameters as
// `url.Values`.
func (r HTTPSummaryBotClassParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryBotClassParamsDateRange string

const (
	HTTPSummaryBotClassParamsDateRange1d         HTTPSummaryBotClassParamsDateRange = "1d"
	HTTPSummaryBotClassParamsDateRange2d         HTTPSummaryBotClassParamsDateRange = "2d"
	HTTPSummaryBotClassParamsDateRange7d         HTTPSummaryBotClassParamsDateRange = "7d"
	HTTPSummaryBotClassParamsDateRange14d        HTTPSummaryBotClassParamsDateRange = "14d"
	HTTPSummaryBotClassParamsDateRange28d        HTTPSummaryBotClassParamsDateRange = "28d"
	HTTPSummaryBotClassParamsDateRange12w        HTTPSummaryBotClassParamsDateRange = "12w"
	HTTPSummaryBotClassParamsDateRange24w        HTTPSummaryBotClassParamsDateRange = "24w"
	HTTPSummaryBotClassParamsDateRange52w        HTTPSummaryBotClassParamsDateRange = "52w"
	HTTPSummaryBotClassParamsDateRange1dControl  HTTPSummaryBotClassParamsDateRange = "1dControl"
	HTTPSummaryBotClassParamsDateRange2dControl  HTTPSummaryBotClassParamsDateRange = "2dControl"
	HTTPSummaryBotClassParamsDateRange7dControl  HTTPSummaryBotClassParamsDateRange = "7dControl"
	HTTPSummaryBotClassParamsDateRange14dControl HTTPSummaryBotClassParamsDateRange = "14dControl"
	HTTPSummaryBotClassParamsDateRange28dControl HTTPSummaryBotClassParamsDateRange = "28dControl"
	HTTPSummaryBotClassParamsDateRange12wControl HTTPSummaryBotClassParamsDateRange = "12wControl"
	HTTPSummaryBotClassParamsDateRange24wControl HTTPSummaryBotClassParamsDateRange = "24wControl"
)

type HTTPSummaryBotClassParamsDeviceType string

const (
	HTTPSummaryBotClassParamsDeviceTypeDesktop HTTPSummaryBotClassParamsDeviceType = "DESKTOP"
	HTTPSummaryBotClassParamsDeviceTypeMobile  HTTPSummaryBotClassParamsDeviceType = "MOBILE"
	HTTPSummaryBotClassParamsDeviceTypeOther   HTTPSummaryBotClassParamsDeviceType = "OTHER"
)

// Format results are returned in.
type HTTPSummaryBotClassParamsFormat string

const (
	HTTPSummaryBotClassParamsFormatJson HTTPSummaryBotClassParamsFormat = "JSON"
	HTTPSummaryBotClassParamsFormatCsv  HTTPSummaryBotClassParamsFormat = "CSV"
)

type HTTPSummaryBotClassParamsHTTPProtocol string

const (
	HTTPSummaryBotClassParamsHTTPProtocolHTTP  HTTPSummaryBotClassParamsHTTPProtocol = "HTTP"
	HTTPSummaryBotClassParamsHTTPProtocolHTTPS HTTPSummaryBotClassParamsHTTPProtocol = "HTTPS"
)

type HTTPSummaryBotClassParamsHTTPVersion string

const (
	HTTPSummaryBotClassParamsHTTPVersionHttPv1 HTTPSummaryBotClassParamsHTTPVersion = "HTTPv1"
	HTTPSummaryBotClassParamsHTTPVersionHttPv2 HTTPSummaryBotClassParamsHTTPVersion = "HTTPv2"
	HTTPSummaryBotClassParamsHTTPVersionHttPv3 HTTPSummaryBotClassParamsHTTPVersion = "HTTPv3"
)

type HTTPSummaryBotClassParamsIPVersion string

const (
	HTTPSummaryBotClassParamsIPVersionIPv4 HTTPSummaryBotClassParamsIPVersion = "IPv4"
	HTTPSummaryBotClassParamsIPVersionIPv6 HTTPSummaryBotClassParamsIPVersion = "IPv6"
)

type HTTPSummaryBotClassParamsOS string

const (
	HTTPSummaryBotClassParamsOSWindows  HTTPSummaryBotClassParamsOS = "WINDOWS"
	HTTPSummaryBotClassParamsOSMacosx   HTTPSummaryBotClassParamsOS = "MACOSX"
	HTTPSummaryBotClassParamsOSIos      HTTPSummaryBotClassParamsOS = "IOS"
	HTTPSummaryBotClassParamsOSAndroid  HTTPSummaryBotClassParamsOS = "ANDROID"
	HTTPSummaryBotClassParamsOSChromeos HTTPSummaryBotClassParamsOS = "CHROMEOS"
	HTTPSummaryBotClassParamsOSLinux    HTTPSummaryBotClassParamsOS = "LINUX"
	HTTPSummaryBotClassParamsOSSmartTv  HTTPSummaryBotClassParamsOS = "SMART_TV"
)

type HTTPSummaryBotClassParamsTLSVersion string

const (
	HTTPSummaryBotClassParamsTLSVersionTlSv1_0  HTTPSummaryBotClassParamsTLSVersion = "TLSv1_0"
	HTTPSummaryBotClassParamsTLSVersionTlSv1_1  HTTPSummaryBotClassParamsTLSVersion = "TLSv1_1"
	HTTPSummaryBotClassParamsTLSVersionTlSv1_2  HTTPSummaryBotClassParamsTLSVersion = "TLSv1_2"
	HTTPSummaryBotClassParamsTLSVersionTlSv1_3  HTTPSummaryBotClassParamsTLSVersion = "TLSv1_3"
	HTTPSummaryBotClassParamsTLSVersionTlSvQuic HTTPSummaryBotClassParamsTLSVersion = "TLSvQUIC"
)

type HTTPSummaryBotClassResponseEnvelope struct {
	Result  HTTPSummaryBotClassResponse             `json:"result,required"`
	Success bool                                    `json:"success,required"`
	JSON    httpSummaryBotClassResponseEnvelopeJSON `json:"-"`
}

// httpSummaryBotClassResponseEnvelopeJSON contains the JSON metadata for the
// struct [HTTPSummaryBotClassResponseEnvelope]
type httpSummaryBotClassResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryBotClassResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryBotClassResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryDeviceTypeParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Filter for bot class. Refer to
	// [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).
	BotClass param.Field[[]HTTPSummaryDeviceTypeParamsBotClass] `query:"botClass"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryDeviceTypeParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryDeviceTypeParamsFormat] `query:"format"`
	// Filter for http protocol.
	HTTPProtocol param.Field[[]HTTPSummaryDeviceTypeParamsHTTPProtocol] `query:"httpProtocol"`
	// Filter for http version.
	HTTPVersion param.Field[[]HTTPSummaryDeviceTypeParamsHTTPVersion] `query:"httpVersion"`
	// Filter for ip version.
	IPVersion param.Field[[]HTTPSummaryDeviceTypeParamsIPVersion] `query:"ipVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for os name.
	OS param.Field[[]HTTPSummaryDeviceTypeParamsOS] `query:"os"`
	// Filter for tls version.
	TLSVersion param.Field[[]HTTPSummaryDeviceTypeParamsTLSVersion] `query:"tlsVersion"`
}

// URLQuery serializes [HTTPSummaryDeviceTypeParams]'s query parameters as
// `url.Values`.
func (r HTTPSummaryDeviceTypeParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryDeviceTypeParamsBotClass string

const (
	HTTPSummaryDeviceTypeParamsBotClassLikelyAutomated HTTPSummaryDeviceTypeParamsBotClass = "LIKELY_AUTOMATED"
	HTTPSummaryDeviceTypeParamsBotClassLikelyHuman     HTTPSummaryDeviceTypeParamsBotClass = "LIKELY_HUMAN"
)

type HTTPSummaryDeviceTypeParamsDateRange string

const (
	HTTPSummaryDeviceTypeParamsDateRange1d         HTTPSummaryDeviceTypeParamsDateRange = "1d"
	HTTPSummaryDeviceTypeParamsDateRange2d         HTTPSummaryDeviceTypeParamsDateRange = "2d"
	HTTPSummaryDeviceTypeParamsDateRange7d         HTTPSummaryDeviceTypeParamsDateRange = "7d"
	HTTPSummaryDeviceTypeParamsDateRange14d        HTTPSummaryDeviceTypeParamsDateRange = "14d"
	HTTPSummaryDeviceTypeParamsDateRange28d        HTTPSummaryDeviceTypeParamsDateRange = "28d"
	HTTPSummaryDeviceTypeParamsDateRange12w        HTTPSummaryDeviceTypeParamsDateRange = "12w"
	HTTPSummaryDeviceTypeParamsDateRange24w        HTTPSummaryDeviceTypeParamsDateRange = "24w"
	HTTPSummaryDeviceTypeParamsDateRange52w        HTTPSummaryDeviceTypeParamsDateRange = "52w"
	HTTPSummaryDeviceTypeParamsDateRange1dControl  HTTPSummaryDeviceTypeParamsDateRange = "1dControl"
	HTTPSummaryDeviceTypeParamsDateRange2dControl  HTTPSummaryDeviceTypeParamsDateRange = "2dControl"
	HTTPSummaryDeviceTypeParamsDateRange7dControl  HTTPSummaryDeviceTypeParamsDateRange = "7dControl"
	HTTPSummaryDeviceTypeParamsDateRange14dControl HTTPSummaryDeviceTypeParamsDateRange = "14dControl"
	HTTPSummaryDeviceTypeParamsDateRange28dControl HTTPSummaryDeviceTypeParamsDateRange = "28dControl"
	HTTPSummaryDeviceTypeParamsDateRange12wControl HTTPSummaryDeviceTypeParamsDateRange = "12wControl"
	HTTPSummaryDeviceTypeParamsDateRange24wControl HTTPSummaryDeviceTypeParamsDateRange = "24wControl"
)

// Format results are returned in.
type HTTPSummaryDeviceTypeParamsFormat string

const (
	HTTPSummaryDeviceTypeParamsFormatJson HTTPSummaryDeviceTypeParamsFormat = "JSON"
	HTTPSummaryDeviceTypeParamsFormatCsv  HTTPSummaryDeviceTypeParamsFormat = "CSV"
)

type HTTPSummaryDeviceTypeParamsHTTPProtocol string

const (
	HTTPSummaryDeviceTypeParamsHTTPProtocolHTTP  HTTPSummaryDeviceTypeParamsHTTPProtocol = "HTTP"
	HTTPSummaryDeviceTypeParamsHTTPProtocolHTTPS HTTPSummaryDeviceTypeParamsHTTPProtocol = "HTTPS"
)

type HTTPSummaryDeviceTypeParamsHTTPVersion string

const (
	HTTPSummaryDeviceTypeParamsHTTPVersionHttPv1 HTTPSummaryDeviceTypeParamsHTTPVersion = "HTTPv1"
	HTTPSummaryDeviceTypeParamsHTTPVersionHttPv2 HTTPSummaryDeviceTypeParamsHTTPVersion = "HTTPv2"
	HTTPSummaryDeviceTypeParamsHTTPVersionHttPv3 HTTPSummaryDeviceTypeParamsHTTPVersion = "HTTPv3"
)

type HTTPSummaryDeviceTypeParamsIPVersion string

const (
	HTTPSummaryDeviceTypeParamsIPVersionIPv4 HTTPSummaryDeviceTypeParamsIPVersion = "IPv4"
	HTTPSummaryDeviceTypeParamsIPVersionIPv6 HTTPSummaryDeviceTypeParamsIPVersion = "IPv6"
)

type HTTPSummaryDeviceTypeParamsOS string

const (
	HTTPSummaryDeviceTypeParamsOSWindows  HTTPSummaryDeviceTypeParamsOS = "WINDOWS"
	HTTPSummaryDeviceTypeParamsOSMacosx   HTTPSummaryDeviceTypeParamsOS = "MACOSX"
	HTTPSummaryDeviceTypeParamsOSIos      HTTPSummaryDeviceTypeParamsOS = "IOS"
	HTTPSummaryDeviceTypeParamsOSAndroid  HTTPSummaryDeviceTypeParamsOS = "ANDROID"
	HTTPSummaryDeviceTypeParamsOSChromeos HTTPSummaryDeviceTypeParamsOS = "CHROMEOS"
	HTTPSummaryDeviceTypeParamsOSLinux    HTTPSummaryDeviceTypeParamsOS = "LINUX"
	HTTPSummaryDeviceTypeParamsOSSmartTv  HTTPSummaryDeviceTypeParamsOS = "SMART_TV"
)

type HTTPSummaryDeviceTypeParamsTLSVersion string

const (
	HTTPSummaryDeviceTypeParamsTLSVersionTlSv1_0  HTTPSummaryDeviceTypeParamsTLSVersion = "TLSv1_0"
	HTTPSummaryDeviceTypeParamsTLSVersionTlSv1_1  HTTPSummaryDeviceTypeParamsTLSVersion = "TLSv1_1"
	HTTPSummaryDeviceTypeParamsTLSVersionTlSv1_2  HTTPSummaryDeviceTypeParamsTLSVersion = "TLSv1_2"
	HTTPSummaryDeviceTypeParamsTLSVersionTlSv1_3  HTTPSummaryDeviceTypeParamsTLSVersion = "TLSv1_3"
	HTTPSummaryDeviceTypeParamsTLSVersionTlSvQuic HTTPSummaryDeviceTypeParamsTLSVersion = "TLSvQUIC"
)

type HTTPSummaryDeviceTypeResponseEnvelope struct {
	Result  HTTPSummaryDeviceTypeResponse             `json:"result,required"`
	Success bool                                      `json:"success,required"`
	JSON    httpSummaryDeviceTypeResponseEnvelopeJSON `json:"-"`
}

// httpSummaryDeviceTypeResponseEnvelopeJSON contains the JSON metadata for the
// struct [HTTPSummaryDeviceTypeResponseEnvelope]
type httpSummaryDeviceTypeResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryDeviceTypeResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryDeviceTypeResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPProtocolParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Filter for bot class. Refer to
	// [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).
	BotClass param.Field[[]HTTPSummaryHTTPProtocolParamsBotClass] `query:"botClass"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryHTTPProtocolParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Filter for device type.
	DeviceType param.Field[[]HTTPSummaryHTTPProtocolParamsDeviceType] `query:"deviceType"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryHTTPProtocolParamsFormat] `query:"format"`
	// Filter for http version.
	HTTPVersion param.Field[[]HTTPSummaryHTTPProtocolParamsHTTPVersion] `query:"httpVersion"`
	// Filter for ip version.
	IPVersion param.Field[[]HTTPSummaryHTTPProtocolParamsIPVersion] `query:"ipVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for os name.
	OS param.Field[[]HTTPSummaryHTTPProtocolParamsOS] `query:"os"`
	// Filter for tls version.
	TLSVersion param.Field[[]HTTPSummaryHTTPProtocolParamsTLSVersion] `query:"tlsVersion"`
}

// URLQuery serializes [HTTPSummaryHTTPProtocolParams]'s query parameters as
// `url.Values`.
func (r HTTPSummaryHTTPProtocolParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryHTTPProtocolParamsBotClass string

const (
	HTTPSummaryHTTPProtocolParamsBotClassLikelyAutomated HTTPSummaryHTTPProtocolParamsBotClass = "LIKELY_AUTOMATED"
	HTTPSummaryHTTPProtocolParamsBotClassLikelyHuman     HTTPSummaryHTTPProtocolParamsBotClass = "LIKELY_HUMAN"
)

type HTTPSummaryHTTPProtocolParamsDateRange string

const (
	HTTPSummaryHTTPProtocolParamsDateRange1d         HTTPSummaryHTTPProtocolParamsDateRange = "1d"
	HTTPSummaryHTTPProtocolParamsDateRange2d         HTTPSummaryHTTPProtocolParamsDateRange = "2d"
	HTTPSummaryHTTPProtocolParamsDateRange7d         HTTPSummaryHTTPProtocolParamsDateRange = "7d"
	HTTPSummaryHTTPProtocolParamsDateRange14d        HTTPSummaryHTTPProtocolParamsDateRange = "14d"
	HTTPSummaryHTTPProtocolParamsDateRange28d        HTTPSummaryHTTPProtocolParamsDateRange = "28d"
	HTTPSummaryHTTPProtocolParamsDateRange12w        HTTPSummaryHTTPProtocolParamsDateRange = "12w"
	HTTPSummaryHTTPProtocolParamsDateRange24w        HTTPSummaryHTTPProtocolParamsDateRange = "24w"
	HTTPSummaryHTTPProtocolParamsDateRange52w        HTTPSummaryHTTPProtocolParamsDateRange = "52w"
	HTTPSummaryHTTPProtocolParamsDateRange1dControl  HTTPSummaryHTTPProtocolParamsDateRange = "1dControl"
	HTTPSummaryHTTPProtocolParamsDateRange2dControl  HTTPSummaryHTTPProtocolParamsDateRange = "2dControl"
	HTTPSummaryHTTPProtocolParamsDateRange7dControl  HTTPSummaryHTTPProtocolParamsDateRange = "7dControl"
	HTTPSummaryHTTPProtocolParamsDateRange14dControl HTTPSummaryHTTPProtocolParamsDateRange = "14dControl"
	HTTPSummaryHTTPProtocolParamsDateRange28dControl HTTPSummaryHTTPProtocolParamsDateRange = "28dControl"
	HTTPSummaryHTTPProtocolParamsDateRange12wControl HTTPSummaryHTTPProtocolParamsDateRange = "12wControl"
	HTTPSummaryHTTPProtocolParamsDateRange24wControl HTTPSummaryHTTPProtocolParamsDateRange = "24wControl"
)

type HTTPSummaryHTTPProtocolParamsDeviceType string

const (
	HTTPSummaryHTTPProtocolParamsDeviceTypeDesktop HTTPSummaryHTTPProtocolParamsDeviceType = "DESKTOP"
	HTTPSummaryHTTPProtocolParamsDeviceTypeMobile  HTTPSummaryHTTPProtocolParamsDeviceType = "MOBILE"
	HTTPSummaryHTTPProtocolParamsDeviceTypeOther   HTTPSummaryHTTPProtocolParamsDeviceType = "OTHER"
)

// Format results are returned in.
type HTTPSummaryHTTPProtocolParamsFormat string

const (
	HTTPSummaryHTTPProtocolParamsFormatJson HTTPSummaryHTTPProtocolParamsFormat = "JSON"
	HTTPSummaryHTTPProtocolParamsFormatCsv  HTTPSummaryHTTPProtocolParamsFormat = "CSV"
)

type HTTPSummaryHTTPProtocolParamsHTTPVersion string

const (
	HTTPSummaryHTTPProtocolParamsHTTPVersionHttPv1 HTTPSummaryHTTPProtocolParamsHTTPVersion = "HTTPv1"
	HTTPSummaryHTTPProtocolParamsHTTPVersionHttPv2 HTTPSummaryHTTPProtocolParamsHTTPVersion = "HTTPv2"
	HTTPSummaryHTTPProtocolParamsHTTPVersionHttPv3 HTTPSummaryHTTPProtocolParamsHTTPVersion = "HTTPv3"
)

type HTTPSummaryHTTPProtocolParamsIPVersion string

const (
	HTTPSummaryHTTPProtocolParamsIPVersionIPv4 HTTPSummaryHTTPProtocolParamsIPVersion = "IPv4"
	HTTPSummaryHTTPProtocolParamsIPVersionIPv6 HTTPSummaryHTTPProtocolParamsIPVersion = "IPv6"
)

type HTTPSummaryHTTPProtocolParamsOS string

const (
	HTTPSummaryHTTPProtocolParamsOSWindows  HTTPSummaryHTTPProtocolParamsOS = "WINDOWS"
	HTTPSummaryHTTPProtocolParamsOSMacosx   HTTPSummaryHTTPProtocolParamsOS = "MACOSX"
	HTTPSummaryHTTPProtocolParamsOSIos      HTTPSummaryHTTPProtocolParamsOS = "IOS"
	HTTPSummaryHTTPProtocolParamsOSAndroid  HTTPSummaryHTTPProtocolParamsOS = "ANDROID"
	HTTPSummaryHTTPProtocolParamsOSChromeos HTTPSummaryHTTPProtocolParamsOS = "CHROMEOS"
	HTTPSummaryHTTPProtocolParamsOSLinux    HTTPSummaryHTTPProtocolParamsOS = "LINUX"
	HTTPSummaryHTTPProtocolParamsOSSmartTv  HTTPSummaryHTTPProtocolParamsOS = "SMART_TV"
)

type HTTPSummaryHTTPProtocolParamsTLSVersion string

const (
	HTTPSummaryHTTPProtocolParamsTLSVersionTlSv1_0  HTTPSummaryHTTPProtocolParamsTLSVersion = "TLSv1_0"
	HTTPSummaryHTTPProtocolParamsTLSVersionTlSv1_1  HTTPSummaryHTTPProtocolParamsTLSVersion = "TLSv1_1"
	HTTPSummaryHTTPProtocolParamsTLSVersionTlSv1_2  HTTPSummaryHTTPProtocolParamsTLSVersion = "TLSv1_2"
	HTTPSummaryHTTPProtocolParamsTLSVersionTlSv1_3  HTTPSummaryHTTPProtocolParamsTLSVersion = "TLSv1_3"
	HTTPSummaryHTTPProtocolParamsTLSVersionTlSvQuic HTTPSummaryHTTPProtocolParamsTLSVersion = "TLSvQUIC"
)

type HTTPSummaryHTTPProtocolResponseEnvelope struct {
	Result  HTTPSummaryHTTPProtocolResponse             `json:"result,required"`
	Success bool                                        `json:"success,required"`
	JSON    httpSummaryHTTPProtocolResponseEnvelopeJSON `json:"-"`
}

// httpSummaryHTTPProtocolResponseEnvelopeJSON contains the JSON metadata for the
// struct [HTTPSummaryHTTPProtocolResponseEnvelope]
type httpSummaryHTTPProtocolResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPProtocolResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPProtocolResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryHTTPVersionParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Filter for bot class. Refer to
	// [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).
	BotClass param.Field[[]HTTPSummaryHTTPVersionParamsBotClass] `query:"botClass"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryHTTPVersionParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Filter for device type.
	DeviceType param.Field[[]HTTPSummaryHTTPVersionParamsDeviceType] `query:"deviceType"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryHTTPVersionParamsFormat] `query:"format"`
	// Filter for http protocol.
	HTTPProtocol param.Field[[]HTTPSummaryHTTPVersionParamsHTTPProtocol] `query:"httpProtocol"`
	// Filter for ip version.
	IPVersion param.Field[[]HTTPSummaryHTTPVersionParamsIPVersion] `query:"ipVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for os name.
	OS param.Field[[]HTTPSummaryHTTPVersionParamsOS] `query:"os"`
	// Filter for tls version.
	TLSVersion param.Field[[]HTTPSummaryHTTPVersionParamsTLSVersion] `query:"tlsVersion"`
}

// URLQuery serializes [HTTPSummaryHTTPVersionParams]'s query parameters as
// `url.Values`.
func (r HTTPSummaryHTTPVersionParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryHTTPVersionParamsBotClass string

const (
	HTTPSummaryHTTPVersionParamsBotClassLikelyAutomated HTTPSummaryHTTPVersionParamsBotClass = "LIKELY_AUTOMATED"
	HTTPSummaryHTTPVersionParamsBotClassLikelyHuman     HTTPSummaryHTTPVersionParamsBotClass = "LIKELY_HUMAN"
)

type HTTPSummaryHTTPVersionParamsDateRange string

const (
	HTTPSummaryHTTPVersionParamsDateRange1d         HTTPSummaryHTTPVersionParamsDateRange = "1d"
	HTTPSummaryHTTPVersionParamsDateRange2d         HTTPSummaryHTTPVersionParamsDateRange = "2d"
	HTTPSummaryHTTPVersionParamsDateRange7d         HTTPSummaryHTTPVersionParamsDateRange = "7d"
	HTTPSummaryHTTPVersionParamsDateRange14d        HTTPSummaryHTTPVersionParamsDateRange = "14d"
	HTTPSummaryHTTPVersionParamsDateRange28d        HTTPSummaryHTTPVersionParamsDateRange = "28d"
	HTTPSummaryHTTPVersionParamsDateRange12w        HTTPSummaryHTTPVersionParamsDateRange = "12w"
	HTTPSummaryHTTPVersionParamsDateRange24w        HTTPSummaryHTTPVersionParamsDateRange = "24w"
	HTTPSummaryHTTPVersionParamsDateRange52w        HTTPSummaryHTTPVersionParamsDateRange = "52w"
	HTTPSummaryHTTPVersionParamsDateRange1dControl  HTTPSummaryHTTPVersionParamsDateRange = "1dControl"
	HTTPSummaryHTTPVersionParamsDateRange2dControl  HTTPSummaryHTTPVersionParamsDateRange = "2dControl"
	HTTPSummaryHTTPVersionParamsDateRange7dControl  HTTPSummaryHTTPVersionParamsDateRange = "7dControl"
	HTTPSummaryHTTPVersionParamsDateRange14dControl HTTPSummaryHTTPVersionParamsDateRange = "14dControl"
	HTTPSummaryHTTPVersionParamsDateRange28dControl HTTPSummaryHTTPVersionParamsDateRange = "28dControl"
	HTTPSummaryHTTPVersionParamsDateRange12wControl HTTPSummaryHTTPVersionParamsDateRange = "12wControl"
	HTTPSummaryHTTPVersionParamsDateRange24wControl HTTPSummaryHTTPVersionParamsDateRange = "24wControl"
)

type HTTPSummaryHTTPVersionParamsDeviceType string

const (
	HTTPSummaryHTTPVersionParamsDeviceTypeDesktop HTTPSummaryHTTPVersionParamsDeviceType = "DESKTOP"
	HTTPSummaryHTTPVersionParamsDeviceTypeMobile  HTTPSummaryHTTPVersionParamsDeviceType = "MOBILE"
	HTTPSummaryHTTPVersionParamsDeviceTypeOther   HTTPSummaryHTTPVersionParamsDeviceType = "OTHER"
)

// Format results are returned in.
type HTTPSummaryHTTPVersionParamsFormat string

const (
	HTTPSummaryHTTPVersionParamsFormatJson HTTPSummaryHTTPVersionParamsFormat = "JSON"
	HTTPSummaryHTTPVersionParamsFormatCsv  HTTPSummaryHTTPVersionParamsFormat = "CSV"
)

type HTTPSummaryHTTPVersionParamsHTTPProtocol string

const (
	HTTPSummaryHTTPVersionParamsHTTPProtocolHTTP  HTTPSummaryHTTPVersionParamsHTTPProtocol = "HTTP"
	HTTPSummaryHTTPVersionParamsHTTPProtocolHTTPS HTTPSummaryHTTPVersionParamsHTTPProtocol = "HTTPS"
)

type HTTPSummaryHTTPVersionParamsIPVersion string

const (
	HTTPSummaryHTTPVersionParamsIPVersionIPv4 HTTPSummaryHTTPVersionParamsIPVersion = "IPv4"
	HTTPSummaryHTTPVersionParamsIPVersionIPv6 HTTPSummaryHTTPVersionParamsIPVersion = "IPv6"
)

type HTTPSummaryHTTPVersionParamsOS string

const (
	HTTPSummaryHTTPVersionParamsOSWindows  HTTPSummaryHTTPVersionParamsOS = "WINDOWS"
	HTTPSummaryHTTPVersionParamsOSMacosx   HTTPSummaryHTTPVersionParamsOS = "MACOSX"
	HTTPSummaryHTTPVersionParamsOSIos      HTTPSummaryHTTPVersionParamsOS = "IOS"
	HTTPSummaryHTTPVersionParamsOSAndroid  HTTPSummaryHTTPVersionParamsOS = "ANDROID"
	HTTPSummaryHTTPVersionParamsOSChromeos HTTPSummaryHTTPVersionParamsOS = "CHROMEOS"
	HTTPSummaryHTTPVersionParamsOSLinux    HTTPSummaryHTTPVersionParamsOS = "LINUX"
	HTTPSummaryHTTPVersionParamsOSSmartTv  HTTPSummaryHTTPVersionParamsOS = "SMART_TV"
)

type HTTPSummaryHTTPVersionParamsTLSVersion string

const (
	HTTPSummaryHTTPVersionParamsTLSVersionTlSv1_0  HTTPSummaryHTTPVersionParamsTLSVersion = "TLSv1_0"
	HTTPSummaryHTTPVersionParamsTLSVersionTlSv1_1  HTTPSummaryHTTPVersionParamsTLSVersion = "TLSv1_1"
	HTTPSummaryHTTPVersionParamsTLSVersionTlSv1_2  HTTPSummaryHTTPVersionParamsTLSVersion = "TLSv1_2"
	HTTPSummaryHTTPVersionParamsTLSVersionTlSv1_3  HTTPSummaryHTTPVersionParamsTLSVersion = "TLSv1_3"
	HTTPSummaryHTTPVersionParamsTLSVersionTlSvQuic HTTPSummaryHTTPVersionParamsTLSVersion = "TLSvQUIC"
)

type HTTPSummaryHTTPVersionResponseEnvelope struct {
	Result  HTTPSummaryHTTPVersionResponse             `json:"result,required"`
	Success bool                                       `json:"success,required"`
	JSON    httpSummaryHTTPVersionResponseEnvelopeJSON `json:"-"`
}

// httpSummaryHTTPVersionResponseEnvelopeJSON contains the JSON metadata for the
// struct [HTTPSummaryHTTPVersionResponseEnvelope]
type httpSummaryHTTPVersionResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryHTTPVersionResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryHTTPVersionResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryIPVersionParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Filter for bot class. Refer to
	// [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).
	BotClass param.Field[[]HTTPSummaryIPVersionParamsBotClass] `query:"botClass"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryIPVersionParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Filter for device type.
	DeviceType param.Field[[]HTTPSummaryIPVersionParamsDeviceType] `query:"deviceType"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryIPVersionParamsFormat] `query:"format"`
	// Filter for http protocol.
	HTTPProtocol param.Field[[]HTTPSummaryIPVersionParamsHTTPProtocol] `query:"httpProtocol"`
	// Filter for http version.
	HTTPVersion param.Field[[]HTTPSummaryIPVersionParamsHTTPVersion] `query:"httpVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for os name.
	OS param.Field[[]HTTPSummaryIPVersionParamsOS] `query:"os"`
	// Filter for tls version.
	TLSVersion param.Field[[]HTTPSummaryIPVersionParamsTLSVersion] `query:"tlsVersion"`
}

// URLQuery serializes [HTTPSummaryIPVersionParams]'s query parameters as
// `url.Values`.
func (r HTTPSummaryIPVersionParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryIPVersionParamsBotClass string

const (
	HTTPSummaryIPVersionParamsBotClassLikelyAutomated HTTPSummaryIPVersionParamsBotClass = "LIKELY_AUTOMATED"
	HTTPSummaryIPVersionParamsBotClassLikelyHuman     HTTPSummaryIPVersionParamsBotClass = "LIKELY_HUMAN"
)

type HTTPSummaryIPVersionParamsDateRange string

const (
	HTTPSummaryIPVersionParamsDateRange1d         HTTPSummaryIPVersionParamsDateRange = "1d"
	HTTPSummaryIPVersionParamsDateRange2d         HTTPSummaryIPVersionParamsDateRange = "2d"
	HTTPSummaryIPVersionParamsDateRange7d         HTTPSummaryIPVersionParamsDateRange = "7d"
	HTTPSummaryIPVersionParamsDateRange14d        HTTPSummaryIPVersionParamsDateRange = "14d"
	HTTPSummaryIPVersionParamsDateRange28d        HTTPSummaryIPVersionParamsDateRange = "28d"
	HTTPSummaryIPVersionParamsDateRange12w        HTTPSummaryIPVersionParamsDateRange = "12w"
	HTTPSummaryIPVersionParamsDateRange24w        HTTPSummaryIPVersionParamsDateRange = "24w"
	HTTPSummaryIPVersionParamsDateRange52w        HTTPSummaryIPVersionParamsDateRange = "52w"
	HTTPSummaryIPVersionParamsDateRange1dControl  HTTPSummaryIPVersionParamsDateRange = "1dControl"
	HTTPSummaryIPVersionParamsDateRange2dControl  HTTPSummaryIPVersionParamsDateRange = "2dControl"
	HTTPSummaryIPVersionParamsDateRange7dControl  HTTPSummaryIPVersionParamsDateRange = "7dControl"
	HTTPSummaryIPVersionParamsDateRange14dControl HTTPSummaryIPVersionParamsDateRange = "14dControl"
	HTTPSummaryIPVersionParamsDateRange28dControl HTTPSummaryIPVersionParamsDateRange = "28dControl"
	HTTPSummaryIPVersionParamsDateRange12wControl HTTPSummaryIPVersionParamsDateRange = "12wControl"
	HTTPSummaryIPVersionParamsDateRange24wControl HTTPSummaryIPVersionParamsDateRange = "24wControl"
)

type HTTPSummaryIPVersionParamsDeviceType string

const (
	HTTPSummaryIPVersionParamsDeviceTypeDesktop HTTPSummaryIPVersionParamsDeviceType = "DESKTOP"
	HTTPSummaryIPVersionParamsDeviceTypeMobile  HTTPSummaryIPVersionParamsDeviceType = "MOBILE"
	HTTPSummaryIPVersionParamsDeviceTypeOther   HTTPSummaryIPVersionParamsDeviceType = "OTHER"
)

// Format results are returned in.
type HTTPSummaryIPVersionParamsFormat string

const (
	HTTPSummaryIPVersionParamsFormatJson HTTPSummaryIPVersionParamsFormat = "JSON"
	HTTPSummaryIPVersionParamsFormatCsv  HTTPSummaryIPVersionParamsFormat = "CSV"
)

type HTTPSummaryIPVersionParamsHTTPProtocol string

const (
	HTTPSummaryIPVersionParamsHTTPProtocolHTTP  HTTPSummaryIPVersionParamsHTTPProtocol = "HTTP"
	HTTPSummaryIPVersionParamsHTTPProtocolHTTPS HTTPSummaryIPVersionParamsHTTPProtocol = "HTTPS"
)

type HTTPSummaryIPVersionParamsHTTPVersion string

const (
	HTTPSummaryIPVersionParamsHTTPVersionHttPv1 HTTPSummaryIPVersionParamsHTTPVersion = "HTTPv1"
	HTTPSummaryIPVersionParamsHTTPVersionHttPv2 HTTPSummaryIPVersionParamsHTTPVersion = "HTTPv2"
	HTTPSummaryIPVersionParamsHTTPVersionHttPv3 HTTPSummaryIPVersionParamsHTTPVersion = "HTTPv3"
)

type HTTPSummaryIPVersionParamsOS string

const (
	HTTPSummaryIPVersionParamsOSWindows  HTTPSummaryIPVersionParamsOS = "WINDOWS"
	HTTPSummaryIPVersionParamsOSMacosx   HTTPSummaryIPVersionParamsOS = "MACOSX"
	HTTPSummaryIPVersionParamsOSIos      HTTPSummaryIPVersionParamsOS = "IOS"
	HTTPSummaryIPVersionParamsOSAndroid  HTTPSummaryIPVersionParamsOS = "ANDROID"
	HTTPSummaryIPVersionParamsOSChromeos HTTPSummaryIPVersionParamsOS = "CHROMEOS"
	HTTPSummaryIPVersionParamsOSLinux    HTTPSummaryIPVersionParamsOS = "LINUX"
	HTTPSummaryIPVersionParamsOSSmartTv  HTTPSummaryIPVersionParamsOS = "SMART_TV"
)

type HTTPSummaryIPVersionParamsTLSVersion string

const (
	HTTPSummaryIPVersionParamsTLSVersionTlSv1_0  HTTPSummaryIPVersionParamsTLSVersion = "TLSv1_0"
	HTTPSummaryIPVersionParamsTLSVersionTlSv1_1  HTTPSummaryIPVersionParamsTLSVersion = "TLSv1_1"
	HTTPSummaryIPVersionParamsTLSVersionTlSv1_2  HTTPSummaryIPVersionParamsTLSVersion = "TLSv1_2"
	HTTPSummaryIPVersionParamsTLSVersionTlSv1_3  HTTPSummaryIPVersionParamsTLSVersion = "TLSv1_3"
	HTTPSummaryIPVersionParamsTLSVersionTlSvQuic HTTPSummaryIPVersionParamsTLSVersion = "TLSvQUIC"
)

type HTTPSummaryIPVersionResponseEnvelope struct {
	Result  HTTPSummaryIPVersionResponse             `json:"result,required"`
	Success bool                                     `json:"success,required"`
	JSON    httpSummaryIPVersionResponseEnvelopeJSON `json:"-"`
}

// httpSummaryIPVersionResponseEnvelopeJSON contains the JSON metadata for the
// struct [HTTPSummaryIPVersionResponseEnvelope]
type httpSummaryIPVersionResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryIPVersionResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryIPVersionResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryOSParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Filter for bot class. Refer to
	// [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).
	BotClass param.Field[[]HTTPSummaryOSParamsBotClass] `query:"botClass"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryOSParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Filter for device type.
	DeviceType param.Field[[]HTTPSummaryOSParamsDeviceType] `query:"deviceType"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryOSParamsFormat] `query:"format"`
	// Filter for http protocol.
	HTTPProtocol param.Field[[]HTTPSummaryOSParamsHTTPProtocol] `query:"httpProtocol"`
	// Filter for http version.
	HTTPVersion param.Field[[]HTTPSummaryOSParamsHTTPVersion] `query:"httpVersion"`
	// Filter for ip version.
	IPVersion param.Field[[]HTTPSummaryOSParamsIPVersion] `query:"ipVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for tls version.
	TLSVersion param.Field[[]HTTPSummaryOSParamsTLSVersion] `query:"tlsVersion"`
}

// URLQuery serializes [HTTPSummaryOSParams]'s query parameters as `url.Values`.
func (r HTTPSummaryOSParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryOSParamsBotClass string

const (
	HTTPSummaryOSParamsBotClassLikelyAutomated HTTPSummaryOSParamsBotClass = "LIKELY_AUTOMATED"
	HTTPSummaryOSParamsBotClassLikelyHuman     HTTPSummaryOSParamsBotClass = "LIKELY_HUMAN"
)

type HTTPSummaryOSParamsDateRange string

const (
	HTTPSummaryOSParamsDateRange1d         HTTPSummaryOSParamsDateRange = "1d"
	HTTPSummaryOSParamsDateRange2d         HTTPSummaryOSParamsDateRange = "2d"
	HTTPSummaryOSParamsDateRange7d         HTTPSummaryOSParamsDateRange = "7d"
	HTTPSummaryOSParamsDateRange14d        HTTPSummaryOSParamsDateRange = "14d"
	HTTPSummaryOSParamsDateRange28d        HTTPSummaryOSParamsDateRange = "28d"
	HTTPSummaryOSParamsDateRange12w        HTTPSummaryOSParamsDateRange = "12w"
	HTTPSummaryOSParamsDateRange24w        HTTPSummaryOSParamsDateRange = "24w"
	HTTPSummaryOSParamsDateRange52w        HTTPSummaryOSParamsDateRange = "52w"
	HTTPSummaryOSParamsDateRange1dControl  HTTPSummaryOSParamsDateRange = "1dControl"
	HTTPSummaryOSParamsDateRange2dControl  HTTPSummaryOSParamsDateRange = "2dControl"
	HTTPSummaryOSParamsDateRange7dControl  HTTPSummaryOSParamsDateRange = "7dControl"
	HTTPSummaryOSParamsDateRange14dControl HTTPSummaryOSParamsDateRange = "14dControl"
	HTTPSummaryOSParamsDateRange28dControl HTTPSummaryOSParamsDateRange = "28dControl"
	HTTPSummaryOSParamsDateRange12wControl HTTPSummaryOSParamsDateRange = "12wControl"
	HTTPSummaryOSParamsDateRange24wControl HTTPSummaryOSParamsDateRange = "24wControl"
)

type HTTPSummaryOSParamsDeviceType string

const (
	HTTPSummaryOSParamsDeviceTypeDesktop HTTPSummaryOSParamsDeviceType = "DESKTOP"
	HTTPSummaryOSParamsDeviceTypeMobile  HTTPSummaryOSParamsDeviceType = "MOBILE"
	HTTPSummaryOSParamsDeviceTypeOther   HTTPSummaryOSParamsDeviceType = "OTHER"
)

// Format results are returned in.
type HTTPSummaryOSParamsFormat string

const (
	HTTPSummaryOSParamsFormatJson HTTPSummaryOSParamsFormat = "JSON"
	HTTPSummaryOSParamsFormatCsv  HTTPSummaryOSParamsFormat = "CSV"
)

type HTTPSummaryOSParamsHTTPProtocol string

const (
	HTTPSummaryOSParamsHTTPProtocolHTTP  HTTPSummaryOSParamsHTTPProtocol = "HTTP"
	HTTPSummaryOSParamsHTTPProtocolHTTPS HTTPSummaryOSParamsHTTPProtocol = "HTTPS"
)

type HTTPSummaryOSParamsHTTPVersion string

const (
	HTTPSummaryOSParamsHTTPVersionHttPv1 HTTPSummaryOSParamsHTTPVersion = "HTTPv1"
	HTTPSummaryOSParamsHTTPVersionHttPv2 HTTPSummaryOSParamsHTTPVersion = "HTTPv2"
	HTTPSummaryOSParamsHTTPVersionHttPv3 HTTPSummaryOSParamsHTTPVersion = "HTTPv3"
)

type HTTPSummaryOSParamsIPVersion string

const (
	HTTPSummaryOSParamsIPVersionIPv4 HTTPSummaryOSParamsIPVersion = "IPv4"
	HTTPSummaryOSParamsIPVersionIPv6 HTTPSummaryOSParamsIPVersion = "IPv6"
)

type HTTPSummaryOSParamsTLSVersion string

const (
	HTTPSummaryOSParamsTLSVersionTlSv1_0  HTTPSummaryOSParamsTLSVersion = "TLSv1_0"
	HTTPSummaryOSParamsTLSVersionTlSv1_1  HTTPSummaryOSParamsTLSVersion = "TLSv1_1"
	HTTPSummaryOSParamsTLSVersionTlSv1_2  HTTPSummaryOSParamsTLSVersion = "TLSv1_2"
	HTTPSummaryOSParamsTLSVersionTlSv1_3  HTTPSummaryOSParamsTLSVersion = "TLSv1_3"
	HTTPSummaryOSParamsTLSVersionTlSvQuic HTTPSummaryOSParamsTLSVersion = "TLSvQUIC"
)

type HTTPSummaryOSResponseEnvelope struct {
	Result  HTTPSummaryOSResponse             `json:"result,required"`
	Success bool                              `json:"success,required"`
	JSON    httpSummaryOSResponseEnvelopeJSON `json:"-"`
}

// httpSummaryOSResponseEnvelopeJSON contains the JSON metadata for the struct
// [HTTPSummaryOSResponseEnvelope]
type httpSummaryOSResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryOSResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryOSResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}

type HTTPSummaryTLSVersionParams struct {
	// Array of comma separated list of ASNs, start with `-` to exclude from results.
	// For example, `-174, 3356` excludes results from AS174, but includes results from
	// AS3356.
	ASN param.Field[[]string] `query:"asn"`
	// Filter for bot class. Refer to
	// [Bot classes](https://developers.cloudflare.com/radar/concepts/bot-classes/).
	BotClass param.Field[[]HTTPSummaryTLSVersionParamsBotClass] `query:"botClass"`
	// Array of comma separated list of continents (alpha-2 continent codes). Start
	// with `-` to exclude from results. For example, `-EU,NA` excludes results from
	// Europe, but includes results from North America.
	Continent param.Field[[]string] `query:"continent"`
	// End of the date range (inclusive).
	DateEnd param.Field[[]time.Time] `query:"dateEnd" format:"date-time"`
	// For example, use `7d` and `7dControl` to compare this week with the previous
	// week. Use this parameter or set specific start and end dates (`dateStart` and
	// `dateEnd` parameters).
	DateRange param.Field[[]HTTPSummaryTLSVersionParamsDateRange] `query:"dateRange"`
	// Array of datetimes to filter the start of a series.
	DateStart param.Field[[]time.Time] `query:"dateStart" format:"date-time"`
	// Filter for device type.
	DeviceType param.Field[[]HTTPSummaryTLSVersionParamsDeviceType] `query:"deviceType"`
	// Format results are returned in.
	Format param.Field[HTTPSummaryTLSVersionParamsFormat] `query:"format"`
	// Filter for http protocol.
	HTTPProtocol param.Field[[]HTTPSummaryTLSVersionParamsHTTPProtocol] `query:"httpProtocol"`
	// Filter for http version.
	HTTPVersion param.Field[[]HTTPSummaryTLSVersionParamsHTTPVersion] `query:"httpVersion"`
	// Filter for ip version.
	IPVersion param.Field[[]HTTPSummaryTLSVersionParamsIPVersion] `query:"ipVersion"`
	// Array of comma separated list of locations (alpha-2 country codes). Start with
	// `-` to exclude from results. For example, `-US,PT` excludes results from the US,
	// but includes results from PT.
	Location param.Field[[]string] `query:"location"`
	// Array of names that will be used to name the series in responses.
	Name param.Field[[]string] `query:"name"`
	// Filter for os name.
	OS param.Field[[]HTTPSummaryTLSVersionParamsOS] `query:"os"`
}

// URLQuery serializes [HTTPSummaryTLSVersionParams]'s query parameters as
// `url.Values`.
func (r HTTPSummaryTLSVersionParams) URLQuery() (v url.Values) {
	return apiquery.MarshalWithSettings(r, apiquery.QuerySettings{
		ArrayFormat:  apiquery.ArrayQueryFormatComma,
		NestedFormat: apiquery.NestedQueryFormatBrackets,
	})
}

type HTTPSummaryTLSVersionParamsBotClass string

const (
	HTTPSummaryTLSVersionParamsBotClassLikelyAutomated HTTPSummaryTLSVersionParamsBotClass = "LIKELY_AUTOMATED"
	HTTPSummaryTLSVersionParamsBotClassLikelyHuman     HTTPSummaryTLSVersionParamsBotClass = "LIKELY_HUMAN"
)

type HTTPSummaryTLSVersionParamsDateRange string

const (
	HTTPSummaryTLSVersionParamsDateRange1d         HTTPSummaryTLSVersionParamsDateRange = "1d"
	HTTPSummaryTLSVersionParamsDateRange2d         HTTPSummaryTLSVersionParamsDateRange = "2d"
	HTTPSummaryTLSVersionParamsDateRange7d         HTTPSummaryTLSVersionParamsDateRange = "7d"
	HTTPSummaryTLSVersionParamsDateRange14d        HTTPSummaryTLSVersionParamsDateRange = "14d"
	HTTPSummaryTLSVersionParamsDateRange28d        HTTPSummaryTLSVersionParamsDateRange = "28d"
	HTTPSummaryTLSVersionParamsDateRange12w        HTTPSummaryTLSVersionParamsDateRange = "12w"
	HTTPSummaryTLSVersionParamsDateRange24w        HTTPSummaryTLSVersionParamsDateRange = "24w"
	HTTPSummaryTLSVersionParamsDateRange52w        HTTPSummaryTLSVersionParamsDateRange = "52w"
	HTTPSummaryTLSVersionParamsDateRange1dControl  HTTPSummaryTLSVersionParamsDateRange = "1dControl"
	HTTPSummaryTLSVersionParamsDateRange2dControl  HTTPSummaryTLSVersionParamsDateRange = "2dControl"
	HTTPSummaryTLSVersionParamsDateRange7dControl  HTTPSummaryTLSVersionParamsDateRange = "7dControl"
	HTTPSummaryTLSVersionParamsDateRange14dControl HTTPSummaryTLSVersionParamsDateRange = "14dControl"
	HTTPSummaryTLSVersionParamsDateRange28dControl HTTPSummaryTLSVersionParamsDateRange = "28dControl"
	HTTPSummaryTLSVersionParamsDateRange12wControl HTTPSummaryTLSVersionParamsDateRange = "12wControl"
	HTTPSummaryTLSVersionParamsDateRange24wControl HTTPSummaryTLSVersionParamsDateRange = "24wControl"
)

type HTTPSummaryTLSVersionParamsDeviceType string

const (
	HTTPSummaryTLSVersionParamsDeviceTypeDesktop HTTPSummaryTLSVersionParamsDeviceType = "DESKTOP"
	HTTPSummaryTLSVersionParamsDeviceTypeMobile  HTTPSummaryTLSVersionParamsDeviceType = "MOBILE"
	HTTPSummaryTLSVersionParamsDeviceTypeOther   HTTPSummaryTLSVersionParamsDeviceType = "OTHER"
)

// Format results are returned in.
type HTTPSummaryTLSVersionParamsFormat string

const (
	HTTPSummaryTLSVersionParamsFormatJson HTTPSummaryTLSVersionParamsFormat = "JSON"
	HTTPSummaryTLSVersionParamsFormatCsv  HTTPSummaryTLSVersionParamsFormat = "CSV"
)

type HTTPSummaryTLSVersionParamsHTTPProtocol string

const (
	HTTPSummaryTLSVersionParamsHTTPProtocolHTTP  HTTPSummaryTLSVersionParamsHTTPProtocol = "HTTP"
	HTTPSummaryTLSVersionParamsHTTPProtocolHTTPS HTTPSummaryTLSVersionParamsHTTPProtocol = "HTTPS"
)

type HTTPSummaryTLSVersionParamsHTTPVersion string

const (
	HTTPSummaryTLSVersionParamsHTTPVersionHttPv1 HTTPSummaryTLSVersionParamsHTTPVersion = "HTTPv1"
	HTTPSummaryTLSVersionParamsHTTPVersionHttPv2 HTTPSummaryTLSVersionParamsHTTPVersion = "HTTPv2"
	HTTPSummaryTLSVersionParamsHTTPVersionHttPv3 HTTPSummaryTLSVersionParamsHTTPVersion = "HTTPv3"
)

type HTTPSummaryTLSVersionParamsIPVersion string

const (
	HTTPSummaryTLSVersionParamsIPVersionIPv4 HTTPSummaryTLSVersionParamsIPVersion = "IPv4"
	HTTPSummaryTLSVersionParamsIPVersionIPv6 HTTPSummaryTLSVersionParamsIPVersion = "IPv6"
)

type HTTPSummaryTLSVersionParamsOS string

const (
	HTTPSummaryTLSVersionParamsOSWindows  HTTPSummaryTLSVersionParamsOS = "WINDOWS"
	HTTPSummaryTLSVersionParamsOSMacosx   HTTPSummaryTLSVersionParamsOS = "MACOSX"
	HTTPSummaryTLSVersionParamsOSIos      HTTPSummaryTLSVersionParamsOS = "IOS"
	HTTPSummaryTLSVersionParamsOSAndroid  HTTPSummaryTLSVersionParamsOS = "ANDROID"
	HTTPSummaryTLSVersionParamsOSChromeos HTTPSummaryTLSVersionParamsOS = "CHROMEOS"
	HTTPSummaryTLSVersionParamsOSLinux    HTTPSummaryTLSVersionParamsOS = "LINUX"
	HTTPSummaryTLSVersionParamsOSSmartTv  HTTPSummaryTLSVersionParamsOS = "SMART_TV"
)

type HTTPSummaryTLSVersionResponseEnvelope struct {
	Result  HTTPSummaryTLSVersionResponse             `json:"result,required"`
	Success bool                                      `json:"success,required"`
	JSON    httpSummaryTLSVersionResponseEnvelopeJSON `json:"-"`
}

// httpSummaryTLSVersionResponseEnvelopeJSON contains the JSON metadata for the
// struct [HTTPSummaryTLSVersionResponseEnvelope]
type httpSummaryTLSVersionResponseEnvelopeJSON struct {
	Result      apijson.Field
	Success     apijson.Field
	raw         string
	ExtraFields map[string]apijson.Field
}

func (r *HTTPSummaryTLSVersionResponseEnvelope) UnmarshalJSON(data []byte) (err error) {
	return apijson.UnmarshalRoot(data, r)
}

func (r httpSummaryTLSVersionResponseEnvelopeJSON) RawJSON() string {
	return r.raw
}
